 @BeforeClass
    public static void setUpClass() throws Exception {
        // rcarver - setup the jndi context and the datasource
        try {
            // Create initial context
            System.setProperty(Context.INITIAL_CONTEXT_FACTORY,
                "org.apache.naming.java.javaURLContextFactory");
            System.setProperty(Context.URL_PKG_PREFIXES, 
                "org.apache.naming");            
            InitialContext ic = new InitialContext();

            ic.createSubcontext("java:");
            ic.createSubcontext("java:/comp");
            ic.createSubcontext("java:/comp/env");
            ic.createSubcontext("java:/comp/env/jdbc");
           
            // Construct DataSource
            OracleConnectionPoolDataSource ds = new OracleConnectionPoolDataSource();
            ds.setURL("jdbc:oracle:thin:@host:port:db");
            ds.setUser("MY_USER_NAME");
            ds.setPassword("MY_USER_PASSWORD");
            
            ic.bind("java:/comp/env/jdbc/nameofmyjdbcresource", ds);
        } catch (NamingException ex) {
            Logger.getLogger(MyDAOTest.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }


package com.example.test;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import org.h2.jdbcx.JdbcConnectionPool;

import junit.framework.TestCase;

public class JunitDataSource extends TestCase {

    public void setUp() throws Exception {
        // rcarver - setup the jndi context and the datasource
        try {
            // Create initial context
            System.setProperty(Context.INITIAL_CONTEXT_FACTORY, "org.apache.naming.java.javaURLContextFactory");
            System.setProperty(Context.URL_PKG_PREFIXES, "org.apache.naming");
            InitialContext ic = new InitialContext();

            ic.createSubcontext("java:");
            ic.createSubcontext("java:/comp");
            ic.createSubcontext("java:/comp/env");
            ic.createSubcontext("java:/comp/env/jdbc");

            JdbcConnectionPool ds = JdbcConnectionPool.create(
                    "jdbc:h2:file:src/main/resources/test.db;FILE_LOCK=NO;MVCC=TRUE;DB_CLOSE_ON_EXIT=TRUE", "sa", "sasasa");
            // Construct DataSource
            // OracleConnectionPoolDataSource ds = new
            // OracleConnectionPoolDataSource();
            // ds.setURL("jdbc:oracle:thin:@host:port:db");
            // ds.setUser("MY_USER_NAME");
            // ds.setPassword("MY_USER_PASSWORD");

            ic.bind("java:/mydatasourcename", ds);
        } catch (NamingException ex) {
            Logger.getLogger(JunitDataSource.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void testSimple() throws Exception {

        // Obtain our environment naming context
        Context initCtx = new InitialContext();

        // Look up our datasource
        DataSource ds = (DataSource) initCtx.lookup("java:/mydatasourcename");

        Connection conn = ds.getConnection();
        Statement stmt = conn.createStatement();

        ResultSet rset = stmt.executeQuery("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES");


        while (rset.next()) {
          System.out.println("<<<\t"+rset.getString("TABLE_NAME"));
        }


    }

}

 	
I get the following error message:

C:\jdbc\intentry>javac db2IntEntry.java

C:\jdbc\intentry>java db2IntEntry
java.lang.ClassCastException
at COM.ibm.db2.jndi.DB2Context.bind(Unknown Source)
at javax.naming.InitialContext.bind(InitialContext.ja va:355)
at db2IntEntry.<init>(db2IntEntry.java:88)
at db2IntEntry.main(db2IntEntry.java:140)


when I execute the code below. Why Unknown Source?

import COM.ibm.db2.jndi.*;
import com.ibm.db2.jcc.DB2SimpleDataSource;

// creates a DataSource object, sets its properties,
// and registers it with a JNDI naming service.
// DB2SimpleDataSource vds = (DB2SimpleDataSource)
// Class.forName("com.ibm.db2.jcc.DB2SimpleDataSource ").newInstance();
com.ibm.db2.jcc.DB2SimpleDataSource vds = new com.ibm.db2.jcc.DB2SimpleDataSource();
vds.setServerName( "localhost" );
vds.setPortNumber( 50000 );
vds.setDatabaseName( "sample" );
vds.setDescription( "A Sample data source" );

// Programming Client Applications: Chapter 10. Programming in Java 273
// JDBC 2.1 Core API Restrictions by the DB2 JDBC Type 4 Driver
// javax.naming.Context: implemented by COM.ibm.db2.jndi.DB2Context
Hashtable env = new Hashtable( 5 );
env.put( Context.INITIAL_CONTEXT_FACTORY, "COM.ibm.db2.jndi.DB2InitialContextFactory" );

Context ctx = new InitialContext( env );
ctx.bind( "jdbc/db2", vds );

DataSource ds = (DataSource)ctx.lookup( "jdbc/db2" );
Connection con = ds.getConnection( "db2admin", "passwd");

Please somebody help.


Thanks a million.

Stephen
